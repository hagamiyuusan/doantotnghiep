// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using doan.EF;

#nullable disable

namespace doan.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20230410005146_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("doan.Entities.Duration", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("day")
                        .HasColumnType("int");

                    b.Property<string>("name")
                        .IsRequired()
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Durations", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            day = 30,
                            name = "30 ngày"
                        },
                        new
                        {
                            Id = 2,
                            day = 90,
                            name = "90 ngày"
                        });
                });

            modelBuilder.Entity("doan.Entities.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Products", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Created = new DateTime(2023, 4, 10, 0, 0, 0, 0, DateTimeKind.Local),
                            Name = "API Image Captioning"
                        });
                });

            modelBuilder.Entity("doan.Entities.ProductDuration", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("durationId")
                        .HasColumnType("int");

                    b.Property<decimal>("price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("productId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasAlternateKey("productId", "durationId");

                    b.HasIndex("durationId");

                    b.ToTable("ProductDurations", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            durationId = 1,
                            price = 3000m,
                            productId = 1
                        },
                        new
                        {
                            Id = 2,
                            durationId = 2,
                            price = 9000m,
                            productId = 1
                        });
                });

            modelBuilder.Entity("doan.Entities.Subscription", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("createDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("productDurationId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("productDurationId");

                    b.ToTable("subscriptions", (string)null);
                });

            modelBuilder.Entity("doan.Entities.ProductDuration", b =>
                {
                    b.HasOne("doan.Entities.Duration", "duration")
                        .WithMany("productDurations")
                        .HasForeignKey("durationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("doan.Entities.Product", "product")
                        .WithMany("productDurations")
                        .HasForeignKey("productId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("duration");

                    b.Navigation("product");
                });

            modelBuilder.Entity("doan.Entities.Subscription", b =>
                {
                    b.HasOne("doan.Entities.ProductDuration", "productDuration")
                        .WithMany("subscriptions")
                        .HasForeignKey("productDurationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("productDuration");
                });

            modelBuilder.Entity("doan.Entities.Duration", b =>
                {
                    b.Navigation("productDurations");
                });

            modelBuilder.Entity("doan.Entities.Product", b =>
                {
                    b.Navigation("productDurations");
                });

            modelBuilder.Entity("doan.Entities.ProductDuration", b =>
                {
                    b.Navigation("subscriptions");
                });
#pragma warning restore 612, 618
        }
    }
}
